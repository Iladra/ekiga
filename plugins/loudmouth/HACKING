This directory contains a loudmouth plugin for ekiga.

For short, "lm-" in a file name means "loudmouth-".

The lm-main files are there to turn the rest into a plugin for ekiga.

The lm-bank files implement an Ekiga::Bank class ; that is the way
XMPP accounts get made available in ekiga's account window.

The lm-account files provide an implementation of the Ekiga::Account
class, and are what you'll find in the account window. Those are the
master files in some sense : when you connect an account, that is the
account which takes care of setting up the connection with the remote
server, and serve as a hub for the rest of the plugin : the XMPP
messages get here, and are then passed around the various other
parts. For this reason, an abstract handler class is defined in
lm-handler.h : as an XMPP message can be of three types ("iq", "message"
and "presence"), there is one method for each, plus an handle_up/handle_down
pair of methods to notify we're going online or offline.

The lm-cluster files provide an implementation of the Ekiga::Cluster
class, which makes the rosters/friend lists/contact lists available
with presence in the main window. A roster is an instance of
Ekiga::Heap, and the implementation is in the lm-heap-roster
files. Each roster contains Ekiga::Presentity objects, which here are
implemented in the lm-presentity files. The cluster implements the
abstract handler class, so you are able to see the presence of your
contacts.

The lm-dialect files provide an implementation of the Ekiga::Dialect
class, which makes it possible to have either simple text chats or
multiple text chats (that meaning that they're either to a single
contact or to several of them -- you can have several of each of
them). Quite logically, you'll fin the implementations of those in the
lm-chat-simple and lm-chat-multiple files. The dialect implements the
abstract handler class, so you're able to get the messages from your
contacts in the right tab of the dialog window.

In the lm-helpers.* files, there are a few functions which can help
make with the usual situation of a request-answer or order-result.