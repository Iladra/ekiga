diff -urN pwlib.orig/src/ptlib/msos/vfw.cxx pwlib/src/ptlib/msos/vfw.cxx
--- pwlib.orig/src/ptlib/msos/vfw.cxx	2006-07-05 04:02:25.000000000 +0000
+++ pwlib/src/ptlib/msos/vfw.cxx	2006-11-01 08:46:40.000000000 +0000
@@ -297,18 +297,6 @@
 #define capCaptureSetSetup(hwnd, s, wSize)         ((BOOL)::SendMessage(hwnd, WM_CAP_SET_SEQUENCE_SETUP, (WPARAM)(wSize), (LPARAM)(LPVOID)(LPCAPTUREPARMS)(s)))
 #define capCaptureGetSetup(hwnd, s, wSize)         ((BOOL)::SendMessage(hwnd, WM_CAP_GET_SEQUENCE_SETUP, (WPARAM)(wSize), (LPARAM)(LPVOID)(LPCAPTUREPARMS)(s)))
 
-extern "C" {
-HWND VFWAPI capCreateCaptureWindowA (LPCSTR lpszWindowName, DWORD dwStyle,
-             int x, int y, int nWidth, int nHeight,
-             HWND hwndParent, int nID);
-
-BOOL VFWAPI capGetDriverDescriptionA (WORD wDriverIndex, LPSTR lpszName,
-              int cbName, LPSTR lpszVer, int cbVer);
-}
-
-#define capGetDriverDescription capGetDriverDescriptionA
-#define capCreateCaptureWindow capCreateCaptureWindowA
-
 #endif // __MINGW32
 
 #define STEP_GRAB_CAPTURE 1
@@ -843,10 +831,6 @@
   // Didn't do top down, tell everything we are up side down
   nativeVerticalFlip = FormatTable[i].negHeight && bi->bmiHeader.biHeight > 0;
 
-  // verify that the driver really took the frame size
-  if (!VerifyHardwareFrameSize(width, height)) 
-    return FALSE; 
-
   // frameHeight must be positive regardlesss of what the driver says
   if (0 > (int)height) 
     height = (unsigned)-(int)height;
