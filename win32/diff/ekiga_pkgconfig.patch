diff -urN ekiga.old/configure.in ekiga/configure.in
--- ekiga.old/configure.in	2006-10-03 16:04:23.000000000 +0000
+++ ekiga/configure.in	2006-11-01 08:40:17.000000000 +0000
@@ -229,38 +229,10 @@
 AC_ARG_WITH(pwlib-dir, [  --with-pwlib-dir=PFX   Location of PWLib], with_pwlib_dir="$withval", with_pwlib_dir="/usr")
 
 dnl Check for the includes presence
-AC_MSG_CHECKING(for PWLib includes in ${with_pwlib_dir}/include/)
+AC_MSG_CHECKING(for PWLib)
 AC_MSG_RESULT()
 
-CPPFLAGS_save="$CPPFLAGS"
-CPPFLAGS="$CPPFLAGS -I${with_pwlib_dir}/include/ptlib"
-AC_CHECK_FILE(${with_pwlib_dir}/include/ptlib/pprocess.h, pwlib_includes="yes", pwlib_includes="no")
-if test "x${pwlib_includes}" != "xno" ; then
-	PWLIB_CFLAGS="-I${with_pwlib_dir}/include/ptlib -I${with_pwlib_dir}/include/ptclib"
-	if test "x${with_pwlib_dir}" != "x/usr"; then
-		PWLIB_CFLAGS="${PWLIB_CFLAGS} -I${with_pwlib_dir}/include"
-	fi	
-fi
-CPPFLAGS="$CPPFLAGS_save"
-
-if test "x${pwlib_includes}" = "xno" ; then
-	AC_MSG_ERROR(You need the PWLib headers to compile Ekiga)
-fi
-
-dnl Checking for the library presence
-LDFLAGS_save="$LDFLAGS"
-AC_LANG(C++)
-LDFLAGS="$LDFLAGS -L${with_pwlib_dir}/${libname}/"
-AC_CHECK_LIB(pt, read, pwlib_libs="yes", pwlib_libs="no")
-LDFLAGS="${LDFLAGS_save}"
-
-if test "x${pwlib_libs}" != "xno"; then
-	if test "x${with_pwlib_dir}" != "x/usr"; then
-		PWLIB_LIBS="-L${with_pwlib_dir}/${libname}"
-	fi
-else
-	AC_MSG_ERROR(You need the PWLib library to compile Ekiga)
-fi
+PKG_CHECK_MODULES(PWLIB, pwlib)
 
 dnl Checking for PWLib version
 CPPFLAGS_save="$CPPFLAGS"
@@ -283,14 +255,6 @@
 	AC_MSG_ERROR(Sorry but the PWLib version you are using doesn't support LDAP)])
 CPPFLAGS="$CPPFLAGS_save"
 
-dnl Check for ptlib-config
-AC_LANG(C)
-AC_CHECK_FILE(${with_pwlib_dir}/bin/ptlib-config, HAS_PTLIB_CONFIG=1)
-if test "x${HAS_PTLIB_CONFIG}" != "x1" ; then
-        AC_MSG_ERROR([Sorry but ptlib-config can not be found, please check your installation]);
-else
-        AC_PATH_PROG(PTLIB_CONFIG, ptlib-config, , ${with_pwlib_dir}/bin/)
-fi
 ARCH_OPAL_CFLAGS="$ARCH_OPAL_CFLAGS `$PTLIB_CONFIG --ccflags`"
                   
 
@@ -300,54 +264,10 @@
 AC_ARG_WITH(opal-dir, [  --with-opal-dir=PFX   Location of Opal], with_opal_dir="$withval", with_opal_dir="/usr")
 
 dnl Check for the includes presence
-AC_MSG_CHECKING(for Opal includes in ${with_opal_dir}/include/)
+AC_MSG_CHECKING(for Opal)
 AC_MSG_RESULT()
 
-CPPFLAGS_save="$CPPFLAGS"
-CPPFLAGS="$CPPFLAGS -I${with_opal_dir}/include/opal"
-AC_CHECK_FILE(${with_opal_dir}/include/opal/opal/call.h, opal_includes="yes", opal_includes="no")
-if test "x${opal_includes}" != "xno" ; then
-	OPAL_CFLAGS="-I${with_opal_dir}/include/opal"
-fi
-CPPFLAGS="$CPPFLAGS_save"
-
-if test "x${opal_includes}" = "xno" ; then
-CPPFLAGS_save="$CPPFLAGS"
-CPPFLAGS="$CPPFLAGS -I${with_opal_dir}/include"
-AC_CHECK_FILE(${with_opal_dir}/include/opal/call.h, opal_includes="yes", opal_includes="no")
-if test "x${opal_includes}" != "xno" ; then
-	OPAL_CFLAGS="-I${with_opal_dir}/include"
-fi
-CPPFLAGS="$CPPFLAGS_save"
-fi
-
-if test "x${opal_includes}" = "xno" ; then
-	AC_MSG_ERROR(You need the Opal headers to compile Ekiga)
-fi
-
-dnl Checking for the library presence
-LIBS_save="$LIBS"
-LIBS="${LIBS} -L${with_opal_dir}/${libname}/ -L${with_pwlib_dir}/${libname}/ -lpt"
-AC_CHECK_LIB(opal, main, opal_libs="yes", opal_libs="yes")
-LIBS="${LIBS_save}"
-
-if test "x${opal_libs}" != "xno"; then
-	if test "x${with_opal_dir}" != "x/usr"; then
-		OPAL_LIBS="-L${with_opal_dir}/lib"
-	fi
-else
-	AC_MSG_ERROR(You need the Opal library to compile Ekiga)
-fi
-
-dnl Checking for Opal version
-CPPFLAGS_save="$CPPFLAGS"
-CPPFLAGS="$CPPFLAGS $OPAL_CFLAGS"
-AC_MSG_CHECKING(for Opal version);
-AC_EGREP_CPP(${OPAL_REC_VERSION},
-	     [#include <opal/buildopts.h>
-	      OPAL_VERSION 
-	     ],AC_MSG_RESULT(${OPAL_REC_VERSION}), AC_MSG_ERROR(Sorry but the recommended OPAL version is ${OPAL_REC_VERSION}))
-CPPFLAGS="$CPPFLAGS_save"
+PKG_CHECK_MODULES(OPAL, opal)
 
 
 dnl ###########################################################################
