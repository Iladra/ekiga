Index: Makefile.in
===================================================================
--- Makefile.in	(revision 21191)
+++ Makefile.in	(working copy)
@@ -43,7 +43,7 @@
 
 include make/ptlib.mak
 
-SUBDIRS := src/ptlib/$(TARGETDIR)
+SUBDIRS := src
 ifeq (1, $(HAS_PLUGINS))
 SUBDIRS += plugins
 endif
@@ -71,7 +71,7 @@
 	$(MAKE) bothdepend both
 
 ptlib:
-	$(MAKE) -C src/ptlib/$(TARGETDIR) both
+	$(MAKE) -C src both
 
 docs: 
 	doxygen ptlib_cfg.dxy
Index: src/ptlib/common/pluginmgr.cxx
===================================================================
--- src/ptlib/common/pluginmgr.cxx	(revision 21191)
+++ src/ptlib/common/pluginmgr.cxx	(working copy)
@@ -382,12 +382,15 @@
              PPluginServiceDescriptor * descriptor)
 {
   PWaitAndSignal m(servicesMutex);
+  std::cerr << "-->PLUGIN\tRegistering Service " << serviceName << "_" << serviceType << std::endl;
 
   // first, check if it something didn't already register that name and type
   for (PINDEX i = 0; i < services.GetSize(); i++) {
     if (services[i].serviceName == serviceName &&
-        services[i].serviceType == serviceType)
+        services[i].serviceType == serviceType) {
+      std::cerr << "-->PLUGIN\tService " << serviceName << "_" << serviceType << " already registered" << std::endl;
       return PFalse;
+    }
   }  
 
   PPluginService * service = new PPluginService(serviceName, serviceType, descriptor);
@@ -434,6 +437,7 @@
 PPluginModuleManager::PPluginModuleManager(const char * _signatureFunctionName, PPluginManager * _pluginMgr)
   : signatureFunctionName(_signatureFunctionName)
 {
+  std::cerr << "-->PLUGIN\tCreating PPluginModuleManager with signature function " << _signatureFunctionName << std::endl;
   pluginDLLs.DisallowDeleteObjects();
   pluginMgr = _pluginMgr;;
   if (pluginMgr == NULL)
