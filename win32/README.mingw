***** NOTICE: this is a work in progress don't expect it to just work *****

== Useful links ==
* http://www.gnomemeeting.net/misc/
* http://www.mingw.org
* http://gnuwin32.sourceforge.net
* http://www.openldap.org
* http://www.openh323.org/cvs.html
* http://snapshots.seconix.com
* http://www.gimp.org/~tml/gimp/win32/downloads.html
* http://xmlsoft.org/downloads.html
* http://www.activestate.com/Products/ActivePerl/
* http://savannah.gnu.org/cgi-bin/viewcvs/gnulib/gnulib/lib

== Recipe ==

** Installing Mingw:
MinGW-4.1.1.exe
in C:\MinGW  (default)
Current's full install


** Installing MSYS:
MSYS-1.0.10.exe
in C:\msys\1.0  (default)


** Installing msysDTK
msysDTK-1.0.1.exe
in c:\msys\1.0  (default)


** Checking the environment
Put in hello.c:
#include <stdio.h>
int
main (int argc, char *argv[])
{
  printf ("Hello\n");
  return 0;
}

then:
$ gcc hello.c
$./a.exe
Hello


** Installing MinGW's bison
bison-2.0-MSYS.tar.gz
(tar xzf in /usr -- not sure it's the right place)


** Installing GnuWin32's flex
flex-2.5.4a-1.exe
in C:\GnuWin32 (NOT default)


** Setting up the environment
Put in .profile:
export PATH=$PATH:/mingw/lib:/c/GnuWin32/bin:$HOME/pwlib/lib:$HOME/opal/lib
export OCVSROOT=-d:pserver:anonymous@cvs.sourceforge.net:/cvsroot/openh323
export GCVSROOT=-d:pserver:anonymous@anoncvs.gnome.org:/cvs/gnome

(needs relaunching msys to apply)
Notice: I also define $ME as jpuydt@192.168.1.2 to make using scp from my main
box easier.


** Installing a POSIX regex library
(this is needed for both OpenLDAP and gnomemeeting -- although gnomemeeting's
configure.in doesn't check for it [I think I'm the bad boy *g*])
Take regex.c, regexec.c, regex.h, regex_internal.c, regex_internal.h,
regcomp.c, alloca_.h and alloca.c from savannah's gnulib's cvs (FIXME: GPL so
it's NOT ok licence-wise)
Rename alloca_.h to alloca.h
$ gcc -c -I. regex.c
$ gcc -c -I. alloca.c
$ ar r libregex.a regex.o alloca.o
$ cp regex.h /mingw/include
$ cp libregex.a /mingw/lib


** Installing OpenLDAP
openldap-2.3.7.tgz
$ ./configure --with-cyrus-sasl=no --enable-bdb=no --enable-hdb=no --prefix=/c/MinGW
$ cd include
$ make depend
$ make install
(it complains about cypath : no problem)
$ cd ../libraries/liblutil
$ make
$ cd ../liblber
$ make
$ make install
$ cd ../libldap
$ make
$ make install
$ cd ../libldap_r
$ make
$ make install

It will fail, but running 'make install' in liblber, libldap and libldap_r is
enough to get the libs.
Go into the include directory and run 'make install' there too to get the
header.


** Installing pwlib's cvs
$ cvs $OCVSROOT login
$ cvs $OCVSROOT -z3 co ptlib_unix
$ cvs $OCVSROOT -z3 co ptlib_win32
(we need both branches, since we want the win32 sources and the unix configure
and makefiles system)
Remove configure and configure.exe, to avoid confusion.

** Compiling pwlib
$ autoconf
$ ./configure --disable-qos --enable-openldap --disable-sasl --enable-video --enable-plugins
$ make opt

Finally:
1. make a symlink from libpt_mingw_x86_r.dll to libpt.dll
2. make a symlink from  make/ptlib-config to bin/
3. edit make/ptbuildopts.mak and add "-lpt" to the ENDLDLIBS line (or opal
won't be linked with pwlib, and hence linking will fail -- FIXME!)


** checking the lib is usable
$ cd samples/hello_world
$ make opt
$ ./obj_mingw_x86_r/hello.exe
Hello world!


** Compiling opal

$ cvs $OCVSROOT -z3 co opal
Remove configure.exe and configure.
$ autoconf.
$ ./configure
$ make opt
(you can go on with this README until the configuration of gnomemeetingwhile it
builds... here the _link_ takes about 8h...)
Finally, make a symlink from lib/libopal_mingw_x86_r.dll to lib/libopal.dll


** Installing gtk+ (and dependancies)
glib-2.6.6.zip
glib-2.6.6-dev.zip
gtk+-2.6.9.zip
gtk+-dev-2.6.9.zip
pango-1.8.2.zip
pango-dev-1.8.2.zip
atk-1.9.0.zip
atk-dev-1.9.0.zip
pkg-config-0.15.zip
libiconv-1.9.1.bin.woe32.zip
gettext-runtime-0.13.1.zip
gettext-tools-0.13.1.zip

Extract them all in C:\MinGW


** Testing gtk+
Get the sources of hello.c here:
http://www.gtk.org/tutorial/c58.html#SEC-HELLOWORLD
Then compile :
$ gcc -mms-bitfields -o hello.exe hello.c `pkg-config --cflags gtk+-2.0` `pkg-config --libs gtk+-2.0`
$ ./hello.exe


** Installing zlib
zlib-1.2.3.tar.gz

$ ./configure --prefix=/mingw
$ make
$ make install
(neat!)


** Installing libpng
libpng-1.2.8-mingwPORT.tar.bz2
libpng-1.2.8.tar.bz2
Untar both in the same directory, go there and do:
$ patch -p1 < mingwPORT/mingwPORT.patch
(the rest of the files of mingwPORT is pure crap IMNSHO)
edit scripts/makefile.mingw and:
- replace -lzdll by -lz everywhere
- replace libpng12 by libpng13
- set MINGDLL to 13 instead of 12
$ make -f scripts/makefile.mingw
$ cp libpng13.dll /mingw/bin

** Installing libxml2
libxml2-2.6.21.tar.gz

$ ./configure --prefix=/c/MinGW --with-threads=no
$ make
$ make install


** Installing ActivePerl

ActivePerl-5.8.7.813-MSWin32-x86-148120.zip
(It seems it is needed to get XML::Parser...)

Install in some directory, then move the perl/ directory in /c.
Modify the .profile and add /c/perl/bin at the beginning of the PATH (yes,
ugly...).


** Compiling gnomemeeting

First of all, you must get the opal branch of cvs (cvs co -r opal gnomemeeting)
on a GNU/Linux system, then run ./autogen.sh -no-configure, to
get the needed portable configure script.

Compress the gnomemeeting tree, move the archive to the win32 box and untar
it to get /home/XXX/gnomemeeting, then:
$ ./configure --disable-gnome --with-pwlib-dir=/home/XXX/pwlib --with-opal-dir=/home/XXX/opal --with-ldap-dir=/mingw --disable-howl --prefix=/c/MinGW
$ make

It should now compile, link and mostly run. We need feedback to make it run
perfectly !

** Installing everything needed to run gnomemeeting in a single directory

Here is the directory layout you have to obtain :
.:
etc/
gnomemeeting.exe
gnomemeeting.schemas
iconv.dll
intl.dll
lib/
libatk-1.0-0.dll
libgdk-win32-2.0-0.dll
libgdk_pixbuf-2.0-0.dll
libglib-2.0-0.dll
libgmodule-2.0-0.dll
libgobject-2.0-0.dll
libgthread-2.0-0.dll
libgtk-win32-2.0-0.dll
liblber.dll
libldap.dll
libopal_mingw_x86_r.dll.2.1-beta2
libpango-1.0-0.dll
libpangowin32-1.0-0.dll
libpng13.dll
libpt_mingw_x86_r.dll.1.9.2
libxml2-2.dll
pango-basic-win32.dll

./etc:
gtk-2.0/
pango/

./etc/gtk-2.0:
gdk-pixbuf.loaders
gtk.immodules

./etc/pango:
pango.aliases
pango.modules

./lib:
gtk-2.0/
pango/

./lib/gtk-2.0:
2.4.0/
include/

./lib/gtk-2.0/2.4.0:
immodules/
loaders/

./lib/gtk-2.0/2.4.0/immodules:
im-am-et.dll
im-cedilla.dll
im-cyrillic-translit.dll
im-ime.dll
im-inuktitut.dll
im-ipa.dll
im-thai-broken.dll
im-ti-er.dll
im-ti-et.dll
im-viqr.dll

./lib/gtk-2.0/2.4.0/loaders:
libpixbufloader-ani.dll
libpixbufloader-bmp.dll
libpixbufloader-gif.dll
libpixbufloader-ico.dll
libpixbufloader-jpeg.dll
libpixbufloader-pcx.dll
libpixbufloader-png.dll
libpixbufloader-pnm.dll
libpixbufloader-ras.dll
libpixbufloader-tga.dll
libpixbufloader-tiff.dll
libpixbufloader-wbmp.dll
libpixbufloader-xbm.dll
libpixbufloader-xpm.dll

./lib/gtk-2.0/include:
gdkconfig.h

./lib/pango:
1.4.0/

./lib/pango/1.4.0:
modules/

./lib/pango/1.4.0/modules:
pango-arabic-fc.dll
pango-basic-fc.dll
pango-basic-win32.dll
pango-hangul-fc.dll
pango-hebrew-fc.dll
pango-indic-fc.dll
pango-khmer-fc.dll
pango-syriac-fc.dll
pango-thai-fc.dll
pango-tibetan-fc.dll
