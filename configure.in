AC_INIT(gnomemeeting, 0.97.0, http://bugzilla.gnome.org/enter_bug.cgi?product=gnomemeeting)
AC_CANONICAL_TARGET
AC_PREREQ(2.53)
AC_CONFIG_SRCDIR(src/gnomemeeting.cpp)
AM_INIT_AUTOMAKE(AC_PACKAGE_NAME, AC_PACKAGE_VERSION)


AM_MAINTAINER_MODE
AM_CONFIG_HEADER(config.h)

AC_PROG_INTLTOOL([0.20])

AM_PROG_LIBTOOL

AC_PROG_CC
AC_PROG_CXX
AC_ISC_POSIX
AC_HEADER_STDC

AC_CHECK_DECLS(strcasecmp)

dnl ###########################################################################
dnl   Versioning
dnl ###########################################################################

MAJOR_VERSION=0
MINOR_VERSION=97
BUILD_TYPE=ReleaseCode
BUILD_NUMBER=0

AC_DEFINE_UNQUOTED(MAJOR_VERSION, $MAJOR_VERSION,[fix])
AC_DEFINE_UNQUOTED(MINOR_VERSION, $MINOR_VERSION,[fix])
AC_DEFINE_UNQUOTED(BUILD_TYPE, $BUILD_TYPE,[fix])
AC_DEFINE_UNQUOTED(BUILD_NUMBER, $BUILD_NUMBER,[fix])


dnl ###########################################################################
dnl   This is to check correct gconf installation
dnl ###########################################################################
SCHEMA_AGE=24
dnl increment this number if you add anything to the schema file
AC_SUBST(SCHEMA_AGE)


dnl ###########################################################################
dnl For the static library
dnl ###########################################################################
AC_SUBST(GNOMEMEETING_CFLAGS)


dnl ###########################################################################
dnl GConf related settings
dnl ###########################################################################
AM_GCONF_SOURCE_2


dnl ###########################################################################
dnl --disable-gnome
dnl ###########################################################################
AC_ARG_ENABLE(gnome, [  --disable-gnome       Disable GNOME features.], disable_gnome="$enable_val", disable_gnome="no")
if test "x${disable_gnome}" = "xno"; then
HAS_GNOME="enabled"
else
HAS_GNOME="disabled"
fi


dnl ###########################################################################
dnl   PKG_CONFIG
dnl ###########################################################################
if test "x${HAS_GNOME}" = "xenabled"; then
PKG_CHECK_MODULES(GNOMEMEETING, libgnomeui-2.0 >= 1.112.0 linc >= 0.5.0 libbonobo-2.0 >= 2.0.0 esound >= 0.2.28 gconf-2.0 >= 1.2.1)
else
PKG_CHECK_MODULES(GNOMEMEETING, gtk+-2.0 >= 2.0.6 esound >= 0.2.28 gconf-2.0 >= 1.2.1 libxml-2.0 >= 2.4.23)
GNOMEMEETING_CFLAGS="$GNOMEMEETING_CFLAGS -DDISABLE_GNOME"
fi


dnl ###########################################################################
dnl Set up Operating System specific parameters and endianess
dnl ###########################################################################
ARCH_H323_CFLAGS=""

dnl Check if we are on 64 bits architectures
AC_CHECK_SIZEOF(long)
if test x$ac_cv_sizeof_long = x8; then
   ARCH_H323_CFLAGS="$ARCH_H323_CFLAGS -DP_64BIT"
fi

dnl Check if we are on Big Endian or Little Endian
AC_C_BIGENDIAN
case xyes in
x$ac_cv_c_bigendian)
   ARCH_H323_CFLAGS="$ARCH_H323_CFLAGS -DPBYTE_ORDER=PBIG_ENDIAN"
  ;;
*)
   ARCH_H323_CFLAGS="$ARCH_H323_CFLAGS -DPBYTE_ORDER=PLITTLE_ENDIAN"
  ;;
esac
	   
dnl Check the OS type (more types can be added) 
AC_MSG_CHECKING(whether OS type is supported)

HAS_SPEEX="disabled"

case $target_os in

  linux-gnu | linux | Linux)
    H323_CFLAGS="-DSPEEX_CODEC -DP_LINUX -D_REENTRANT -DP_HAS_SEMAPHORES -DP_PTHREADS $ARCH_H323_CFLAGS -DHAS_OSS -O3 -DNDEBUG -fPIC -g -DPHAS_TEMPLATES -Wall"
    H323_LIBS="-lopenh323 -ldl -lpt -lpthread"
    LIBPT_FILE="libpt.so"
    LIBOPENH323_FILE="libopenh323.so"
    HAS_SPEEX="enabled"
    AC_MSG_RESULT([yes])
    gm_platform="linux"

dnl if debug add this and link to -lh323_linux_x86_d -lpt_linux_x86_d
dnl -D_DEBUG -DPMEMORY_CHECK=1 -DPTRACING -g
    ;;

  FreeBSD* | freebsd* )
    H323_CFLAGS="-DSPEEX_CODEC -DP_FREEBSD=400001 -DP_SSL -DP_PTHREADS  $ARCH_H323_CFLAGS -O2 -Wall -DPHAS_TEMPLATES -DSTATIC_LIBS_USED"
    H323_LIBS="-lh323_FreeBSD_x86_r_s -lpt_FreeBSD_x86_r_s -pthread -lssl -lcrypto"
    LIBPT_FILE="libpt_FreeBSD_x86_r_s.a"
    LIBOPENH323_FILE="libh323_FreeBSD_x86_r_s.a"
    HAS_SPEEX="enabled"
    AC_MSG_RESULT([yes])
    gm_platform="freebsd"
    ;;

  darwin* )
    H323_CFLAGS="-DSPEEX_CODEC -DP_MACOSX -DP_SSL -DP_PTHREADS  $ARCH_H323_CFLAGS -O2 -Wall -DNO_LONG_DOUBLE -DPHAS_TEMPLATES -DHAS_ESD -DSTATIC_LIBS_USED -multiply_defined suppress"
    H323_LIBS="-multiply_defined suppress -lh323_Darwin_ppc_r_s -lpt_Darwin_ppc_r_s -lssl -lcrypto -lX11"
    LIBPT_FILE="libpt_Darwin_ppc_r_s.a"
    LIBOPENH323_FILE="libh323_Darwin_ppc_r_s.a"
    HAS_SPEEX="enabled"
    AC_MSG_RESULT([yes])
    gm_platform="macosx"
    ;;

  *)
    AC_MSG_ERROR("Only Linux FreeBSD and Mac OS X are supported. Please contact the author. You can add more OS types.")
    ;;
esac


dnl ###########################################################################
dnl PTLib Headers and Libraries
dnl ###########################################################################
AC_ARG_WITH(ptlib-includes, [  --with-ptlib-includes=PFX   Location of PTLib includes.], with_ptlib_includes="$withval", with_ptlib_includes="/usr/include/ptlib")
have_ptlib_includes="no"

if test "x${with_ptlib_includes}" != "xno"; then
	CPPFLAGS_save="$CPPFLAGS"
	
	AC_MSG_CHECKING(for PTLib includes)
	AC_MSG_RESULT()
	
	CPPFLAGS="$CPPFLAGS -I${with_ptlib_includes}/unix -I${with_ptlib_includes}"
	ptlib_includes="yes"
	CPPFLAGS="$CPPFLAGS_save"
	
	if test "x${ptlib_includes}" != "xno" -a "x${ptlib_includes}" != "x"; then
		have_ptlib_includes="yes"
		PTLIB_CFLAGS="-I${with_ptlib_includes}/unix -I${with_ptlib_includes}/.. -I${with_ptlib_includes}/../ptclib"
		PTLIB_INCLUDE_DIR="${with_ptlib_includes}"
	else
		AC_MSG_ERROR([You need PTLib's header files to build GnomeMeeting])
	fi
else
	AC_MSG_ERROR([You need PTLib's header files to build GnomeMeeting])
fi


AC_ARG_WITH(ptlib-libs, [  --with-ptlib-libs=PFX       Location of PTLib libs.], with_ptlib_libs="$withval", with_ptlib_libs="/usr/lib")
if test "x${with_ptlib_libs}" != "xno" -a "x${have_ptlib_includes}" != "xno"; then
	AC_CHECK_FILE(${with_ptlib_libs}/${LIBPT_FILE}, ptlib_libs="yes", ptlib_libs="no")
	
	if test "x${ptlib_libs}" != "xno"; then
		PTLIB_LDFLAGS="-L${with_ptlib_libs}"
		PTLIB_LIBS_DIR="${with_ptlib_libs}"
	else
		AC_MSG_ERROR([You need PTLib to enjoy GnomeMeeting])
	fi
else
	AC_MSG_ERROR([You need PTLib to enjoy GnomeMeeting])
fi


dnl ###########################################################################
dnl OpenH323
dnl ###########################################################################
AC_ARG_WITH(openh323-includes, [  --with-openh323-includes=PFX   Location of OpenH323 includes.], with_openh_includes="$withval", with_openh_includes="/usr/include/openh323")
have_openh323_includes="no"
if test "x${with_openh_includes}" != "xno" -a "x${have_ptlib_includes}" != "xno"; then
	CPPFLAGS_save="$CPPFLAGS"
	
	AC_MSG_CHECKING(for OpenH323 includes)
	AC_MSG_RESULT()
	
	CPPFLAGS="$CPPFLAGS -I$PTLIB_CFLAGS -I${with_openh_includes}"
	openh323_includes="yes"
	CPPFLAGS="$CPPFLAGS_save"
	
	if test "x${openh323_includes}" != "xno" -a "x${openh323_includes}" != "x"; then
		have_openh323_includes="yes"
		OPENH323_CFLAGS="-I${with_openh_includes}"
		OPENH323_INCLUDE_DIR="${with_openh_includes}"
	else
		AC_MSG_ERROR([You need OpenH323's header files to build GnomeMeeting])
	fi
else
	AC_MSG_ERROR([You need OpenH323's header files to build GnomeMeeting])
fi


AC_ARG_WITH(openh323-libs, [  --with-openh323-libs=PFX       Location of OpenH323 libs.], with_openh323_libs="$withval", with_openh323_libs="/usr/lib")
msg_openh323="no"

if test "x${with_openh323_libs}" != "xno" -a "x${have_openh323_includes}" != "xno"; then
	AC_CHECK_FILE(${with_openh323_libs}/${LIBOPENH323_FILE}, openh323_libs="yes", openh323_libs="no")
	if test "x${openh323_libs}" != "xno"; then
		msg_openh323="yes"
		OPENH323_LDFLAGS="-L${with_openh323_libs}"
		OPENH323_LIBS_DIR="${with_openh323_libs}"
	else
		AC_MSG_ERROR([You need OpenH323 to enjoy GnomeMeeting])
	fi
else
	AC_MSG_ERROR([You need OpenH323 to enjoy GnomeMeeting])
fi


dnl ###########################################################################
dnl Check if there is IXJ support
dnl ###########################################################################
CPPFLAGS_save="$CPPFLAGS"
	
CPPFLAGS="$CPPFLAGS -I /usr/include/linux -I /usr/include/sys -I /usr/local/include/sys"
AC_CHECK_HEADER(telephony.h, HAS_IXJ="enabled", HAS_IXJ="disabled",-)

if test "x${HAS_IXJ}" = "xenabled"; then
	H323_CFLAGS="$H323_CFLAGS -DHAS_IXJ"
fi

CPPFLAGS="$CPPFLAGS_save"


dnl ###########################################################################
dnl   Check for SDL
dnl ###########################################################################

dnl SDL does not work on Mac OS X yet, so disable it
if test ${gm_platform} = "macosx" ; then
	HAS_SDL="disabled"
        AC_MSG_WARN([*** SDL cannot be used on Mac OS X. Fullscreen mode will be disabled])

else

	SDL_VERSION=1.2.4
	SDL_HAS_SDL=
	AM_PATH_SDL($SDL_VERSION,
	            SDL_HAS_SDL="-DHAS_SDL",
		    AC_MSG_WARN([*** SDL version $SDL_VERSION not found!. Fullscreen mode will be disabled]))
	SDL_CFLAGS="$SDL_CFLAGS $SDL_HAS_SDL" 
	SDL_LDFLAGS="$LIBS $SDL_LIBS"

	if test "x${SDL_HAS_SDL}" = "x-DHAS_SDL" ; then
		HAS_SDL="enabled"
	else  
		HAS_SDL="disabled"
	fi
fi


dnl ###########################################################################
dnl LDAP Checks                                                                
dnl ###########################################################################
AC_ARG_WITH(openldap-includes, [  --with-openldap-includes=PFX   Location of OpenLDAP includes.], with_openldap_includes="$withval", with_openldap_includes="/usr/include")
                                                                               
have_openldap_includes="no"                                                    
                                                                               
if test "x${with_openldap_includes}" != "xno" ; then                           
        CPPFLAGS_save="$CPPFLAGS"                                              
        AC_MSG_CHECKING(for OpenLDAP includes)                                 
        AC_MSG_RESULT()                                                        
                                                                               
        CPPFLAGS="$CPPFLAGS -I${with_openldap_includes}"                       
                                                                               
        AC_CHECK_HEADER(ldap.h, [ openldap_includes="yes" ])                   
                                                                               
        CPPFLAGS="$CPPFLAGS_save"                                              

        if test "x${openldap_includes}" != "xno" -a "x${openldap_includes}" != "x"; then
                have_openldap_includes="yes"                                   
                LDAP_INCLUDES="-I${with_openldap_includes}"                    
        else                                                                   
                AC_MSG_ERROR([You need OpenLDAP's header files to build GnomeMeeting])
        fi                                                                     
else                                                                           
        AC_MSG_ERROR([You need OpenLDAP's header files to build GnomeMeeting]) 
fi                                                                             
                                                                               
                                                                              
                                                                               
AC_ARG_WITH(openldap-libs, [  --with-openldap-libs=PFX       Location of OpenLDAP libs.], with_openldap_libs="$withval", with_openldap_libs="/usr/lib")
                                                                               
msg_openldap="no"                                                              
                                                                               
if test "x${with_openldap_libs}" != "xno" -a "x${have_openldap_includes}" != "xno"; then
        AC_CHECK_FILE(${with_openldap_libs}/libldap.so, openldap_libs="yes", openldap_libs="no")
        if test "x${openldap_libs}" = "xno"; then
                AC_CHECK_FILE(${with_openldap_libs}/libldap.a, openldap_libs="yes", openldap_libs="no")
        fi

        if test "x${openldap_libs}" != "xno"; then                             
                msg_openldap="yes"                                             
                LDAP_LIBS="-L${with_openldap_libs} -lldap -llber ${LDAP_LIBS}"
        else                                                                   
                AC_MSG_ERROR([You need OpenLDAP to enjoy GnomeMeeting])        
        fi                                                                     
else                                                                           
        AC_MSG_ERROR([You need OpenLDAP to enjoy GnomeMeeting])                
fi                                                                             


dnl #########################################################################  
dnl  Check for LDAP if available.                                              
dnl ########################################################################   
if test ${gm_platform} = "linux" ; then
	AC_CHECK_LIB(resolv, res_gethostbyaddr, [LIBS="-lresolv $LIBS"], AC_MSG_ERROR([*** libresolv not found.]), -lresolv)
	LDAP_LIBS="${LDAP_LIBS} -lresolv"
fi
                                                                               
LIBS="$LDAP_LIBS $LIBS"                                                        
                                                                               
AC_CHECK_LIB(ldap, ldap_simple_bind, LIBS="$LDAP_LIBS $LIBS", AC_MSG_ERROR([***
LDAP library is not found.]), -llber)


dnl #########################################################################
dnl  Check for IPV6 if available.
dnl ########################################################################
HAS_IPV6="disabled"
ipv6="no"

AC_ARG_ENABLE(ipv6, [  --enable-ipv6     enable IPv6 experimental support],ipv6="yes")
dnl Linux /proc/net check
if test -e "/proc/net/if_inet6" -a "${ipv6}" != "no"; then
   HAS_IPV6="enabled"
   H323_CFLAGS="$H323_CFLAGS -DP_HAS_IPV6"
fi

dnl BSD include file check for IPv6 (which does not depend on --enable-ipv6)
if test -e "/usr/include/netinet6/in6.h" -a "${gm_platform}" != "linux"; then
   HAS_IPV6="enabled"
   H323_CFLAGS="$H323_CFLAGS -DP_HAS_IPV6"
fi


dnl #########################################################################
dnl  Check for FIREWIRE if available.
dnl ########################################################################
HAS_FIREWIRE="disabled"
firewire="no"

AC_ARG_ENABLE(firewire, [  --enable-firewire     enable Firewire support], firewire="yes")
if test -e "/usr/include/libdc1394/dc1394_control.h" -a -e "/usr/include/libavc1394/avc1394.h" -a "${firewire}" != "no"; then
   HAS_FIREWIRE="enabled"
   H323_CFLAGS="$H323_CFLAGS -DTRY_1394DC -DTRY_1394AVC"
else
if test "${firewire}" != "no"; then
AC_MSG_ERROR([***Firewire headers not found.])
fi
fi



GNOMEMEETING_INCLUDES="$PTLIB_CFLAGS $LDAP_INCLUDES $OPENH323_CFLAGS $H323_CFLAGS $GNOMEMEETING_CFLAGS $SDL_CFLAGS $ARTSC_CFLAGS"
GNOMEMEETING_LDADD="$PTLIB_LDFLAGS $OPENH323_LDFLAGS $GNOMEMEETING_LIBS $LDAP_LIBS $SDL_LDFLAGS $ARTSC_LDFLAGS $H323_LIBS"
CFLAGS=""

CXXFLAGS="-O3 $ORBIT_CFLAGS"


dnl #########################################################################
dnl  Support for internationalization
dnl ########################################################################
ALL_LINGUAS="am az ca cs da de el es fr gl hu it ja lv nl no pl pt pt_BR ro ru sk sv ta tr uk vi wa zh_CN zh_TW"

GETTEXT_PACKAGE=gnomemeeting
AC_SUBST(GETTEXT_PACKAGE)
AC_DEFINE_UNQUOTED(GETTEXT_PACKAGE, "$GETTEXT_PACKAGE",[fix])
AM_GLIB_GNU_GETTEXT


AC_SUBST(GNOMEMEETING_LDADD)
AC_SUBST(GNOMEMEETING_INCLUDES)


dnl #########################################################################
dnl Set PACKAGE_LOCALE_DIR in config.h.
dnl #########################################################################
if test "x${prefix}" = "xNONE"; then
  AC_DEFINE_UNQUOTED(PACKAGE_LOCALE_DIR, "${ac_default_prefix}/${DATADIRNAME}/locale",[fix])
else
  AC_DEFINE_UNQUOTED(PACKAGE_LOCALE_DIR, "${prefix}/${DATADIRNAME}/locale",[fix])
fi

AC_MSG_CHECKING([whether to install into Gnome's prefix])
if test x"$use_system_install" = xyes ; then
	AC_MSG_RESULT([yes])
	gnomedatadir=`${GNOME_CONFIG} --datadir`
	gnomeconfdir=`${GNOME_CONFIG} --sysconfdir`
else
	AC_MSG_RESULT([no])
	gnomedatadir=`eval "echo ${datadir}"`
	gnomeconfdir=`eval "echo ${sysconfdir}"`
fi

AC_SUBST(gnomedatadir)
AC_SUBST(gnomeconfdir)

AC_ARG_ENABLE(install_schemas,
        [  --disable-install-schemas        Disable installation of the gconf schemas])
AM_CONDITIONAL(INSTALL_SCHEMAS, test x$enable_install_schemas != xno)
	
AC_OUTPUT(
Makefile
src/gnomemeeting-config-tool
gnomemeeting.schemas.in
lib/Makefile
lib/widgets/Makefile
lib/xdap/Makefile
po/Makefile.in
man/Makefile
src/Makefile
pixmaps/Makefile
sounds/Makefile
xdap_data/Makefile)


dnl ###########################################################################
dnl Summary
dnl ###########################################################################

echo ""
echo "================ Final configuration ==================="
echo "    Installing into prefix: $prefix"
echo ""
echo "   OpenH323 Include Directory is  :  $OPENH323_INCLUDE_DIR"
echo " OpenH323 Libraries Directory is  :  $OPENH323_LIBS_DIR"
echo "      PTLIB Include Directory is  :  $PTLIB_INCLUDE_DIR"
echo "    PTLIB Libraries Directory is  :  $PTLIB_LIBS_DIR"
echo ""
echo "                Quicknet support  :  $HAS_IXJ"
echo "          SDL Fullscreen support  :  $HAS_SDL"
echo "           Speex GPL audio codec  :  $HAS_SPEEX"
echo "  GNOME Features (Bonobo, Druid," 
echo "   Session, Incoming Call Sound)  :  $HAS_GNOME"
echo "     IPv6 Support (EXPERIMENTAL)  :  $HAS_IPV6"
echo "                Firewire support  :  $HAS_FIREWIRE"
echo ""
echo "                         OS Type  :  $target_os"
echo "                    Machine Type  :  $target_cpu"
echo ""
echo " If all settings are OK, type make and make install "
echo "========================================================"
