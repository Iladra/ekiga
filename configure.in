AC_INIT(src/gnomemeeting.cpp)
AM_CONFIG_HEADER(config.h)
AM_INIT_AUTOMAKE(GnomeMeeting, 0.13-CVS)
AM_MAINTAINER_MODE
AM_ACLOCAL_INCLUDE(macros)
AC_PROG_INTLTOOL
dnl #############################################################################
dnl   Versioning
dnl #############################################################################

MAJOR_VERSION=0
MINOR_VERSION=13
BUILD_TYPE=ReleaseCode
BUILD_NUMBER=1

AC_DEFINE_UNQUOTED(MAJOR_VERSION, $MAJOR_VERSION)
AC_DEFINE_UNQUOTED(MINOR_VERSION, $MINOR_VERSION)
AC_DEFINE_UNQUOTED(BUILD_TYPE, $BUILD_TYPE)
AC_DEFINE_UNQUOTED(BUILD_NUMBER, $BUILD_NUMBER)


GNOME_INIT

AC_PROG_CC
AC_PROG_CXX
AC_ISC_POSIX
AC_HEADER_STDC
AC_ARG_PROGRAM

dnl *******************************************
dnl Set up Operating System specific parameters
dnl *******************************************

case $OSTYPE in

  linux-gnu)
    H323_CFLAGS="-DP_LINUX -D_REENTRANT -DP_HAS_SEMAPHORES -DP_PTHREADS -DPBYTE_ORDER=PLITTLE_ENDIAN -DHAS_OSS -O3 -Wall"
    H323_LIBS="-lopenh323 -ldl -lpt -lpthread -lssl -lcrypto"
    LIBPT_FILE="libpt.so"
    LIBOPENH323_FILE="libopenh323.so"
    GTK_CONFIG="gtk-config"
dnl * if debug add this and link to -lh323_linux_x86_d -lpt_linux_x86_d
dnl * -D_DEBUG -DPMEMORY_CHECK=1 -DPTRACING -g
    ;;

  FreeBSD)
    H323_CFLAGS="-DP_FREEBSD=400001 -DP_SSL -DP_PTHREADS -DPBYTE_ORDER=PLITTLE_ENDIAN -O2 -Wall"
    H323_LIBS="-lh323_FreeBSD_x86_r -lpt_FreeBSD_x86_r -pthread -lssl -lcrypto"
    LIBPT_FILE="libpt_FreeBSD_x86_r_s.a"
    LIBOPENH323_FILE="libh323_FreeBSD_x86_r_s.a"
    ;;
  *)
    AC_MSG_ERROR("Only Linux and FreeBSD are supported. Please contact the author")
    ;;
esac



dnl ************************************************
dnl PTLib
dnl Adapted from openh323 check in gnomemeeting ;-)
dnl ************************************************
AC_ARG_WITH(ptlib-includes, [  --with-ptlib-includes=PFX   Location of PTLib includes.],  
	with_ptlib_includes="$withval", with_ptlib_includes="/usr/include/ptlib")
have_ptlib_includes="no"
if test "x${with_ptlib_includes}" != "xno"; then
	CPPFLAGS_save="$CPPFLAGS"
	
	AC_MSG_CHECKING(for PTLib includes)
	AC_MSG_RESULT()
	
	CPPFLAGS="$CPPFLAGS -I${with_ptlib_includes}/unix -I${with_ptlib_includes}"
	AC_CHECK_HEADER(pstring.h, [ ptlib_includes="yes" ])
	CPPFLAGS="$CPPFLAGS_save"
	
	if test "x${ptlib_includes}" != "xno" -a "x${ptlib_includes}" != "x"; then
		have_ptlib_includes="yes"
		PTLIB_CFLAGS="-I${with_ptlib_includes}/unix -I${with_ptlib_includes}/.. -I${with_ptlib_includes}/../ptclib"
		PTLIB_INCLUDE_DIR="${with_ptlib_includes}"
	else
		AC_MSG_ERROR([You need PTLib's header files to build GnomeMeeting])
	fi
else
	AC_MSG_ERROR([You need PTLib's header files to build GnomeMeeting])
fi

AC_ARG_WITH(ptlib-libs, [  --with-ptlib-libs=PFX       Location of PTLib libs.],
	with_ptlib_libs="$withval", with_ptlib_libs="/usr/lib")
if test "x${with_ptlib_libs}" != "xno" -a "x${have_ptlib_includes}" != "xno"; then
	AC_CHECK_FILE(${with_ptlib_libs}/${LIBPT_FILE}, ptlib_libs="yes", ptlib_libs="no")
	
	if test "x${ptlib_libs}" != "xno"; then
		PTLIB_LDFLAGS="-L${with_ptlib_libs} ${H323_LIBS}"
		PTLIB_LIBS_DIR="${with_ptlib_libs}"
	else
		AC_MSG_ERROR([You need PTLib to enjoy GnomeMeeting])
	fi
else
	AC_MSG_ERROR([You need PTLib to enjoy GnomeMeeting])
fi


dnl ***************************************
dnl OpenH323
dnl Adapted from openssl check in gnome-vfs
dnl ***************************************
AC_ARG_WITH(openh323-includes, [  --with-openh323-includes=PFX   Location of OpenH323 includes.],  
	with_openh_includes="$withval", with_openh_includes="/usr/include/openh323")
have_openh323_includes="no"
if test "x${with_openh_includes}" != "xno" -a "x${have_ptlib_includes}" != "xno"; then
	CPPFLAGS_save="$CPPFLAGS"
	
	AC_MSG_CHECKING(for OpenH323 includes)
	AC_MSG_RESULT()
	
	CPPFLAGS="$CPPFLAGS -I$PTLIB_CFLAGS -I${with_openh_includes}"
	AC_CHECK_HEADER(h225.h, [ openh323_includes="yes" ])
	CPPFLAGS="$CPPFLAGS_save"
	
	if test "x${openh323_includes}" != "xno" -a "x${openh323_includes}" != "x"; then
		have_openh323_includes="yes"
		OPENH323_CFLAGS="-I${with_openh_includes}"
		OPENH323_INCLUDE_DIR="${with_openh_includes}"
	else
		AC_MSG_ERROR([You need OpenH323's header files to build GnomeMeeting])
	fi
else
	AC_MSG_ERROR([You need OpenH323's header files to build GnomeMeeting])
fi

AC_ARG_WITH(openh323-libs, [  --with-openh323-libs=PFX       Location of OpenH323 libs.],
	with_openh323_libs="$withval", with_openh323_libs="/usr/lib")
msg_openh323="no"
if test "x${with_openh323_libs}" != "xno" -a "x${have_openh323_includes}" != "xno"; then
	AC_CHECK_FILE(${with_openh323_libs}/${LIBOPENH323_FILE}, openh323_libs="yes", openh323_libs="no")
	if test "x${openh323_libs}" != "xno"; then
		msg_openh323="yes"
		OPENH323_LDFLAGS="-L${with_openh323_libs} ${H323_LIBS}"
		OPENH323_LIBS_DIR="${with_openh323_libs}"
	else
		AC_MSG_ERROR([You need OpenH323 to enjoy GnomeMeeting])
	fi
else
	AC_MSG_ERROR([You need OpenH323 to enjoy GnomeMeeting])
fi



dnl *********************************************************************
dnl * Check if there is IXJ support
dnl *********************************************************************
CPPFLAGS_save="$CPPFLAGS"
	
CPPFLAGS="$CPPFLAGS -I /usr/include/linux -I /usr/include/sys -I /usr/local/include/sys"
AC_CHECK_HEADER(telephony.h, have_ixj="true", have_ixj="false")

if test "$have_ixj" = "true"; then
	H323_CFLAGS="$H323_CFLAGS -DHAS_IXJ"
fi

CPPFLAGS="$CPPFLAGS_save"



dnl ***************************************
dnl OpenSSL
dnl ***************************************
AC_ARG_WITH(openssl-includes, [  --with-openssl-includes=PFX   Location of OpenSSL includes.],
        with_openssl_includes="$withval", with_openssl_includes="/usr/include/openssl")
have_openssl_includes="no"
if test "x${with_openssl_includes}" != "xno" ; then
        CPPFLAGS_save="$CPPFLAGS"

        AC_MSG_CHECKING(for OpenSSL includes)
        AC_MSG_RESULT()

        CPPFLAGS="$CPPFLAGS -I$PTLIB_CFLAGS -I${with_openssl_includes}"
        AC_CHECK_HEADER(ssl.h, [ openssl_includes="yes" ])
        CPPFLAGS="$CPPFLAGS_save"

        if test "x${openssl_includes}" != "xno" -a "x${openssl_includes}" != "x"; then
                have_openssl_includes="yes"
                OPENSSL_CFLAGS="-I${with_openssl_includes}"
                OPENSSL_INCLUDE_DIR="${with_openssl_includes}"
        else
                AC_MSG_ERROR([You need OpenSSL's header files to build GnomeMeeting])
        fi
else
        AC_MSG_ERROR([You need OpenSSL's header files to build GnomeMeeting])
fi

AC_ARG_WITH(openssl-libs, [  --with-openssl-libs=PFX       Location of OpenSSL libs.],
        with_openssl_libs="$withval", with_openssl_libs="/usr/lib")
msg_openssl="no"
if test "x${with_openssl_libs}" != "xno" -a "x${have_openssl_includes}" != "xno"; then
        AC_CHECK_FILE(${with_openssl_libs}/libssl.so, openssl_libs="yes", openssl_libs="no")
        if test "x${openssl_libs}" != "xno"; then
                msg_openssl="yes"
                OPENSSL_LDFLAGS="-L${with_openssl_libs} ${SSL_LIBS}"
                OPENSSL_LIBS_DIR="${with_openssl_libs}"
        else
                AC_MSG_ERROR([You need OpenSSL to enjoy GnomeMeeting])
        fi
else
        AC_MSG_ERROR([You need OpenSSL to enjoy GnomeMeeting])
fi

dnl *****************************
dnl * LDAP Checks
dnl *****************************

LDAP_INCLUDES=""

if test "$OSTYPE" = "linux-gnu"; then
	LDAP_LIBS="-lldap -llber -lresolv"
else
	LDAP_LIBS="-lldap -llber"
fi


AC_ARG_WITH(ldap, [  --with-ldap=PFX       Location of ldap.],
	with_ldap="$withval", with_ldap="/usr")
msg_ldap="no"
if test "x${with_ldap}" != "xno" -a "x${have_ldap}" != "xno"; then
	AC_CHECK_FILE(${with_ldap}/lib/libldap.so, ldap="yes", ldap="no")
	if test "x${ldap}" != "xno"; then
		ldap="yes"
	        LDAP_DIR="${with_ldap}"
		LDAP_LIBS="-L${LDAP_DIR}/lib ${LDAP_LIBS}"
		LDAP_INCLUDES="-I${LDAP_DIR}/include ${LDAP_INCLUDES}"
	else
		AC_MSG_ERROR([You need ldap to enjoy GnomeMeeting])
	fi
else
	AC_MSG_ERROR([You need ldap to enjoy GnomeMeeting])
fi



GNOMEMEETING_INCLUDES="$PTLIB_CFLAGS $LDAP_INCLUDES $OPENH323_CFLAGS $OPENSSL_CFLAGS"
GNOMEMEETING_LDADD="$PTLIB_LDFLAGS $OPENH323_LDFLAGS $OPENSSL_LDFLAGS"
CFLAGS=""


dnl *********************************************************************
dnl * Gdk-pixbuf ********************************************************
dnl *********************************************************************
AM_PATH_GDK_PIXBUF(0.10.0, ,
AC_MSG_ERROR([*** gdk_pixbuf 0.10.0 or better is required.]))

dnl *********************************************************************
dnl * Gconf *************************************************************
dnl *********************************************************************
AM_PATH_GCONF(1.0, ,
AC_MSG_ERROR([*** gconf 1.0 or better is required.]))

dnl *********************************************************************
dnl ORBIT
dnl *********************************************************************
dnl AM_PATH_ORBIT(0.5.12, ,
dnl AC_MSG_ERROR([*** orbit 0.5.12 or better is required.]))

dnl *********************************************************************
dnl ** GNOME ************************************************************
dnl *********************************************************************

GNOMEMEETING_INCLUDES="$GNOMEMEETING_INCLUDES $H323_CFLAGS $GNOME_INCLUDE_DIR $GDK_PIXBUF_CFLAGS $GCONF_CFLAGS"
GNOMEMEETING_LDADD="$GNOMEMEETING_LDADD $GNOME_LIBDIR $GNOMEUI_LIBS $GTK_LIBS $LDAP_LIBS $H323_LIBS `$GTK_CONFIG --libs gthread` $GDK_PIXBUF_LIBS $GCONF_LIBS -lgconf-gtk-1 -lgnomecanvaspixbuf"

GNOME_COMPILE_WARNINGS
GNOME_X_CHECKS

CXXFLAGS="$CXXFLAGS $ORBIT_CFLAGS"

dnl *********************************************************************
dnl ** Setup gconf schemas installation *********************************
dnl *********************************************************************

AC_ARG_ENABLE(install_schemas,
	[  --disable-install-schemas        Disable installation of the gconf schemas])
AM_CONDITIONAL(INSTALL_SCHEMAS, test x$enable_install_schemas != xno)

if test x$enable_install_schemas != xno; then
	AM_GCONF_SOURCE
fi

dnl #########################################################################
dnl  Check for LDAP if available.
dnl ########################################################################
if test "$OSTYPE" = "linux-gnu"; then
  AC_CHECK_LIB(resolv, res_gethostbyaddr, [LIBS="-lresolv $LIBS"], AC_MSG_ERROR([*** libresolv not found.]), -lresolv)
fi


LIBS="$LDAP_LIBS $LIBS"

AC_CHECK_LIB(ldap, ldap_simple_bind, LIBS="$LDAP_LIBS $LIBS", AC_MSG_ERROR([*** LDAP library is not found.]), -llber)


dnl #########################################################################
dnl  Support for internationalization
dnl ########################################################################
ALL_LINGUAS="cs de el es fr gl it ja nl no pt_BR ru sv tr wa zh_CN zh_TW"
AM_GNOME_GETTEXT

AC_SUBST(GNOMEMEETING_LDADD)
AC_SUBST(GNOMEMEETING_INCLUDES)


dnl #########################################################################
dnl Set PACKAGE_LOCALE_DIR in config.h.
dnl #########################################################################
if test "x${prefix}" = "xNONE"; then
  AC_DEFINE_UNQUOTED(PACKAGE_LOCALE_DIR, "${ac_default_prefix}/${DATADIRNAME}/locale")
else
  AC_DEFINE_UNQUOTED(PACKAGE_LOCALE_DIR, "${prefix}/${DATADIRNAME}/locale")
fi

AC_MSG_CHECKING([whether to install into Gnome's prefix])
if test x"$use_system_install" = xyes ; then
	AC_MSG_RESULT([yes])
	gnomedatadir=`${GNOME_CONFIG} --datadir`
	gnomeconfdir=`${GNOME_CONFIG} --sysconfdir`
else
	AC_MSG_RESULT([no])
	gnomedatadir=`eval "echo ${datadir}"`
	gnomeconfdir=`eval "echo ${sysconfdir}"`
fi

AC_SUBST(gnomedatadir)
AC_SUBST(gnomeconfdir)

dnl Subst PACKAGE_PIXMAPS_DIR.
PACKAGE_PIXMAPS_DIR="`gnome-config --datadir`/pixmaps/${PACKAGE}"
AC_SUBST(PACKAGE_PIXMAPS_DIR)

AC_OUTPUT(
Makefile
po/Makefile.in
intl/Makefile
macros/Makefile
src/Makefile
pixmaps/Makefile
sounds/Makefile)

dnl ## internationalization support
dnl stamp.h],[sed -e "/POTFILES =/r po/POTFILES" po/Makefile.in > po/Makefile])

dnl ######################################################################################
dnl   Summary
dnl #####################################################################################

echo ""
echo "================ Final configuration ==================="
echo "    Installing into prefix: $prefix"
echo ""
echo "    OpenSSL Include Directory is  :  $OPENSSL_INCLUDE_DIR"
echo "  OpenSSL Libraries Directory is  :  $OPENSSL_LIBS_DIR"
echo "   OpenH323 Include Directory is  :  $OPENH323_INCLUDE_DIR"
echo " OpenH323 Libraries Directory is  :  $OPENH323_LIBS_DIR"
echo "      PTLIB Include Directory is  :  $PTLIB_INCLUDE_DIR"
echo "    PTLIB Libraries Directory is  :  $PTLIB_LIBS_DIR"
echo "               LDAP Directory is  :  $LDAP_DIR"
echo "                         OS Type  :  $OSTYPE"
echo "                    Machine Type  :  $MACHTYPE"
echo ""
echo " If all settings are OK, type make and make install "
echo "========================================================"
